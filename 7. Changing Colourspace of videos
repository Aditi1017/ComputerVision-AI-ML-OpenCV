{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "import cv2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "cam = cv2.VideoCapture(0)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#here we are creating digital video processing \n",
    "#we are giving tint to our live video"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#change video to grey\n",
    "\n",
    "while True:\n",
    "    r , p = cam.read()\n",
    "    gray = cv2.cvtColor(p,cv2.COLOR_BGR2GRAY)\n",
    "    cv2.imshow(\"hi\", gray)\n",
    "    if cv2.waitKey(1)== 13:            #13 for enter  #1 in waitKey makes video more smoother\n",
    "        break\n",
    "cv2.destroyAllWindows()\n",
    "cam.release()\n",
    "        \n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "#change video to hue saturation\n",
    "\n",
    "while True:\n",
    "    r , p = cam.read()\n",
    "    gray = cv2.cvtColor(p,cv2.COLOR_BGR2HLS)\n",
    "    cv2.imshow(\"hi\", gray)\n",
    "    if cv2.waitKey(1)== 13:            #13 for enter  #1 in waitKey makes video more smoother\n",
    "        break\n",
    "cv2.destroyAllWindows()\n",
    "cam.release()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "while True:\n",
    "    r , p = cam.read()\n",
    "    gray = cv2.cvtColor(p,cv2.COLOR_BGR2HSV)\n",
    "    cv2.imshow(\"hi\", gray)\n",
    "    if cv2.waitKey(1)== 13:            #13 for enter  #1 in waitKey makes video more smoother\n",
    "        break\n",
    "cv2.destroyAllWindows()\n",
    "cam.release()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
